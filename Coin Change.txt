class Solution:
    def coinChange(self, coins: List[int], amount: int) -> int:
        # Number of coins
        cache = [float('inf') for _ in range(amount + 1)]
        
        # Edge Case
        cache[0] = 0
        
        # Bottom Up DP
        # for amountI in range(1,amount + 1):
        #     for coin in coins:
        #         if amountI >= coin:
        #             cache[amountI] = min(cache[amountI], cache[amountI - coin] + 1)

        for coin in coins:
            for amountI in range(coin, amount + 1):
                cache[amountI] = min(cache[amountI], cache[amountI - coin] + 1)
                
        if cache[-1] == inf:
            return -1
        return cache[-1]